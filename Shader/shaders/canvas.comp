#version 430 core
#extension GL_ARB_compute_shader : enable

layout(local_size_x = 1, local_size_y = 1, local_size_z = 1) in; // every local_size_* is by default 1

layout(binding = 0, rgba32f) uniform restrict image2D imageOut; // called "edited" in other shaders
layout(binding = 1, rgba32f) uniform readonly image2D imageIn; // called "canvas" in other shaders
layout(binding = 2, rgba32f) uniform restrict image2D sobelCanvas; // initialize the canvas to the base canvas image

void main()
{
	ivec2 dims = imageSize(imageIn);

	ivec2 uv = ivec2(gl_GlobalInvocationID.x, dims.y - gl_GlobalInvocationID.y);

	vec4 canvas_pixel_color = imageLoad(imageIn, uv);

	// image is passed as a series of scanline from top-left to bottom while the (0, 0) uv coordinate is at the bottom-left
	// so flip the y axis before the store operation
	uv = ivec2(gl_GlobalInvocationID.x, gl_GlobalInvocationID.y);
	
	imageStore(imageOut, uv, canvas_pixel_color);
	imageStore(sobelCanvas, uv, canvas_pixel_color);
}